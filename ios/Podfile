platform :ios, '12.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

def ensure_bundle(installer, pod_name, relative_bundle_path)
  bundle_path = File.join('Pods', pod_name, relative_bundle_path)
  return unless File.exist?(bundle_path)

  installer.aggregate_targets.each do |aggregate_target|
    project = aggregate_target.user_project
    next unless project

    project.targets.each do |target|
      next unless ['Runner', 'RunnerTests'].include?(target.name)
      next if target.resources_build_phase.files_references.any? { |ref| ref.path == bundle_path }

      resource_ref = project.files.find { |f| f.path == bundle_path } || project.new_file(bundle_path)
      target.resources_build_phase.add_file_reference(resource_ref, true)
    end
  end
end

target 'Runner' do
  use_frameworks! :linkage => :static
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
    end
  end

  ensure_bundle(installer, 'SDWebImage', 'SDWebImage.bundle')
  ensure_bundle(installer, 'SwiftyGif', 'SwiftyGif.bundle')

  installer.aggregate_targets.each do |aggregate_target|
    aggregate_target.user_project.native_targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'i386'
      end
    end
  end
end
