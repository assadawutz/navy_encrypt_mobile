name: Build Mobile Artifacts with GitHub CLI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-ios-ipa:
    name: Build unsigned iOS IPA
    runs-on: macos-latest
    permissions:
      contents: write
    outputs:
      release-tag: ${{ steps.publish-release.outputs.release_tag }}
      ios-download-url: ${{ steps.publish-release.outputs.download_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.3.8"



      - name: Build unsigned IPA
        run: flutter build ipa --no-codesign

      - name: Locate IPA path
        id: locate-ipa
        run: |
          IPA_PATH=$(find build/ios/ipa -name "*.ipa" -print -quit)
          if [ -z "$IPA_PATH" ]; then
            echo "Unable to locate IPA artifact" >&2
            exit 1
          fi
          echo "ipa_path=$IPA_PATH" >> "$GITHUB_OUTPUT"

      - name: Upload IPA as workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: ${{ steps.locate-ipa.outputs.ipa_path }}
          if-no-files-found: error

      - name: Publish release and upload IPA via GitHub CLI
        id: publish-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          IPA_PATH="${{ steps.locate-ipa.outputs.ipa_path }}"
          TAG="mobile-build-${{ github.run_id }}"
          TITLE="Automated mobile build ${{ github.run_id }}"
          NOTES="Automated unsigned mobile artifacts generated from workflow run ${{ github.run_id }}."
          if gh release view "$TAG" >/dev/null 2>&1; then
            echo "Release $TAG already exists, skipping creation"
          else
            gh release create "$TAG" "$IPA_PATH#Unsigned iOS IPA" --title "$TITLE" --notes "$NOTES" --target "${{ github.sha }}" --prerelease
          fi
          DOWNLOAD_URL=$(gh release view "$TAG" --json assets --jq '.assets[] | select(.name=="Unsigned iOS IPA") | .browser_download_url')
          if [ -z "${DOWNLOAD_URL:-}" ]; then
            gh release upload "$TAG" "$IPA_PATH#Unsigned iOS IPA" --clobber
            DOWNLOAD_URL=$(gh release view "$TAG" --json assets --jq '.assets[] | select(.name=="Unsigned iOS IPA") | .browser_download_url')
          fi
          echo "release_tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "download_url=$DOWNLOAD_URL" >> "$GITHUB_OUTPUT"
          echo "iOS IPA Download URL: $DOWNLOAD_URL" >> "$GITHUB_STEP_SUMMARY"

  build-android-apk:
    name: Build unsigned Android APK
    runs-on: ubuntu-latest
    needs: build-ios-ipa
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.3.8"

      - name: Install dependencies
        run: flutter pub get

      - name: Build unsigned APK
        run: flutter build apk --release

      - name: Locate APK path
        id: locate-apk
        run: |
          APK_PATH=$(find build/app/outputs/flutter-apk -name "*.apk" -print -quit)
          if [ -z "$APK_PATH" ]; then
            echo "Unable to locate APK artifact" >&2
            exit 1
          fi
          echo "apk_path=$APK_PATH" >> "$GITHUB_OUTPUT"

      - name: Upload APK as workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: ${{ steps.locate-apk.outputs.apk_path }}
          if-no-files-found: error

      - name: Publish APK to release via GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          APK_PATH="${{ steps.locate-apk.outputs.apk_path }}"
          TAG="${{ needs.build-ios-ipa.outputs.release-tag }}"
          if ! gh release view "$TAG" >/dev/null 2>&1; then
            echo "iOS job did not publish release $TAG" >&2
            exit 1
          fi
          gh release upload "$TAG" "$APK_PATH#Unsigned Android APK" --clobber
          DOWNLOAD_URL=$(gh release view "$TAG" --json assets --jq '.assets[] | select(.name=="Unsigned Android APK") | .browser_download_url')
          echo "Android APK Download URL: $DOWNLOAD_URL" >> "$GITHUB_STEP_SUMMARY"
          echo "The Android APK is available at: $DOWNLOAD_URL"

      - name: Summarise artifact URLs
        env:
          IOS_URL: ${{ needs.build-ios-ipa.outputs.ios-download-url }}
        run: |
          echo "iOS IPA URL: $IOS_URL" >> "$GITHUB_STEP_SUMMARY"
